{"version":3,"sources":["table/table.js","index.js"],"names":["ItemTable","props","addRow","counter","Math","random","newRow","push","setState","rows","addCell","cols","deleteCell","idx","findIndex","el","slice","deleteRow","initialHeight","initialWidth","arrWidth","arrHeight","i","state","cellSize","this","styleBtn","height","width","className","map","row","key","toString","td","style","top","onClick","type","left","marginTop","Component","ReactDOM","render","document","getElementById"],"mappings":"iNAEqBA,G,kBACjB,WAAYC,GAAQ,IAAD,uBACf,4CAAMA,KAeVC,OAAS,WACL,IAAMC,EAAUC,KAAKC,SACfC,EAAS,GACfA,EAAOC,KAAKJ,GACZ,EAAKK,UAAS,YAAa,IAAXC,EAAU,EAAVA,KAKZ,MAAO,CAACA,KAJK,sBACNA,GADM,CAETH,SAvBO,EA4BnBI,QAAU,WACN,IAAMP,EAAUC,KAAKC,SACfC,EAAS,GACfA,EAAOC,KAAKJ,GACZ,EAAKK,UAAS,YAAa,IAAXG,EAAU,EAAVA,KAKZ,MAAO,CAACA,KAJK,sBACNA,GADM,CAETL,SAnCO,EAwCnBM,WAAa,WACT,EAAKJ,UAAS,YAAa,IAAXG,EAAU,EAAVA,KACNE,EAAMF,EAAKG,WAAU,SAACC,GAAD,OAAQA,KAKnC,MAAO,CAACJ,KAJK,sBACNA,EAAKK,MAAM,EAAGH,IADR,YAENF,EAAKK,MAAMH,EAAM,UA7Cb,EAkDnBI,UAAY,WACR,EAAKT,UAAS,YAAa,IAAXC,EAAU,EAAVA,KACNI,EAAMJ,EAAKK,WAAU,SAACC,GAAD,OAAQA,KAKnC,MAAO,CAACN,KAJK,sBACNA,EAAKO,MAAM,EAAGH,IADR,YAENJ,EAAKO,MAAMH,EAAM,UAlD5B,IALe,MAEuB,EAAKZ,MAApCiB,EAFQ,EAERA,cAAeC,EAFP,EAEOA,aAChBC,EAAW,GACXC,EAAY,GACVC,EAAE,EAAGA,EAAIH,EAAcG,IAC3BF,EAASb,KAAKe,GAElB,IAAI,IAAIA,EAAE,EAAGA,EAAIJ,EAAeI,IAC5BD,EAAUd,KAAKe,GATJ,OAWf,EAAKC,MAAQ,CACTd,KAAMW,EACNT,KAAMU,GAbK,E,sEA4DT,IAAD,OACEG,EAAYC,KAAKxB,MAAjBuB,SACDE,EAAW,CACbC,OAAQH,EACRI,MAAOJ,GAEX,OACI,yBAAKK,UAAU,UACX,yBAAKA,UAAU,aACX,+BACI,+BACCJ,KAAKF,MAAMd,KAAKqB,KAAI,SAACC,GAAD,OACjB,wBAAIC,IAAKD,EAAIE,YACR,EAAKV,MAAMZ,KAAKmB,KAAI,SAACI,GAAD,OACjB,wBAAIF,IAAKE,EAAGD,WAAYE,MAAO,CAACR,OAAQH,EAAUI,MAAOJ,IACrD,yBAAKK,UAAU,cAAcM,MAAO,CAACC,KAAMZ,EAAW,IAClD,4BAAQa,QAAS,EAAKzB,WAAY0B,KAAK,SAASH,MAAOT,EAAUG,UAAU,kBAAiB,uBAAGA,UAAU,kBAE7G,yBAAKA,UAAU,eAAeM,MAAO,CAACI,MAAOf,EAAW,EAAGgB,WAAYhB,EAAS,IAC5E,4BAAQa,QAAS,EAAKpB,UAAWqB,KAAK,SAASH,MAAOT,EAAUG,UAAU,kBAAiB,uBAAGA,UAAU,4BAQhI,4BAAQQ,QAASZ,KAAKvB,OAAQoC,KAAK,SAASH,MAAOT,EAAUG,UAAU,eAAc,uBAAGA,UAAU,iBAEtG,6BACI,4BAAQQ,QAASZ,KAAKf,QAAS4B,KAAK,SAASH,MAAOT,EAAUG,UAAU,eAAc,uBAAGA,UAAU,sB,GA3FhFY,cCWvCC,IAASC,OAAO,mBARC,WACb,OACI,yBAAKd,UAAU,aACX,kBAAC,EAAD,CAAWV,aAAc,EAAGD,cAAe,EAAGM,SAAU,QAKpD,MAAaoB,SAASC,eAAe,U","file":"static/js/main.e3ba5bcc.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './table.css';\r\nexport default class ItemTable extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        const {initialHeight, initialWidth} = this.props;\r\n        const arrWidth = [];\r\n        const arrHeight = [];\r\n        for(let i=0; i < initialWidth; i++){\r\n            arrWidth.push(i);\r\n        }\r\n        for(let i=0; i < initialHeight; i++){\r\n            arrHeight.push(i);\r\n        }\r\n        this.state = {\r\n            rows: arrWidth,\r\n            cols: arrHeight\r\n        };\r\n    }\r\n    addRow = () =>{\r\n        const counter = Math.random();\r\n        const newRow = [];\r\n        newRow.push(counter);\r\n        this.setState(({rows}) => {\r\n            const newArry = [\r\n                ...rows,\r\n                newRow\r\n            ]\r\n            return({rows: newArry})\r\n        });\r\n    };\r\n    addCell = () =>{\r\n        const counter = Math.random();\r\n        const newRow = [];\r\n        newRow.push(counter);\r\n        this.setState(({cols}) => {\r\n            const newArry = [\r\n                ...cols,\r\n                newRow\r\n            ]\r\n            return({cols: newArry})\r\n        });\r\n    };\r\n    deleteCell = () =>{\r\n        this.setState(({cols}) => {\r\n            const idx = cols.findIndex((el) => el);\r\n            const newArry = [\r\n                ...cols.slice(0, idx),\r\n                ...cols.slice(idx + 1)\r\n            ]\r\n            return({cols: newArry})\r\n        });\r\n    };\r\n    deleteRow = () =>{\r\n        this.setState(({rows}) => {\r\n            const idx = rows.findIndex((el) => el);\r\n            const newArry = [\r\n                ...rows.slice(0, idx),\r\n                ...rows.slice(idx + 1)\r\n            ]\r\n            return({rows: newArry})\r\n        });\r\n    };\r\n    render() {\r\n        const {cellSize} = this.props;\r\n        const styleBtn = {\r\n            height: cellSize,\r\n            width: cellSize\r\n        }\r\n        return(\r\n            <div className=\"holder\">\r\n                <div className=\"table-box\">\r\n                    <table>\r\n                        <tbody>\r\n                        {this.state.rows.map((row) => (\r\n                            <tr key={row.toString()}>\r\n                                {this.state.cols.map((td) => (\r\n                                    <td key={td.toString()} style={{height: cellSize, width: cellSize}}>\r\n                                        <div className=\"btn-box top\" style={{top: -cellSize - 5}}>\r\n                                            <button onClick={this.deleteCell} type=\"button\" style={styleBtn} className=\"btn btn-remove\"><i className=\"fa fa-minus\"></i></button>\r\n                                        </div>\r\n                                        <div className=\"btn-box left\" style={{left: -cellSize - 5, marginTop: -cellSize/2}}>\r\n                                            <button onClick={this.deleteRow} type=\"button\" style={styleBtn} className=\"btn btn-remove\"><i className=\"fa fa-minus\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <button onClick={this.addRow} type=\"button\" style={styleBtn} className=\"btn btn-add\"><i className=\"fa fa-plus\"></i></button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.addCell} type=\"button\" style={styleBtn} className=\"btn btn-add\"><i className=\"fa fa-plus\"></i></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ItemTable from './table/table';\n\n\nconst AppTable = ()=>{\n    return(\n        <div className=\"container\">\n            <ItemTable initialWidth={4} initialHeight={4} cellSize={50}/>\n        </div>\n    )\n}\n\nReactDOM.render(<AppTable/>, document.getElementById('root'));\n"],"sourceRoot":""}